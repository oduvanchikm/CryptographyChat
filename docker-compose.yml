services:
  securechat.server:
    image: securechat-server
    volumes:
      - aspnet-data-protection-keys:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: SecureChat.Server/Dockerfile
    ports:
      - "5001:5000"
      - "5002:5001"
    depends_on:
      - securechat.database
      - kafka

  frontend:
    image: frontend
    build:
      context: .  # Путь к вашему React-проекту
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"  # Прокси на 80 порт внутри контейнера для Nginx
    depends_on:
      - securechat.server

  securechat.database:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: securechatdb
    ports:
      - "5440:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2185:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9097:9092"

volumes:
  postgres_data:
  aspnet-data-protection-keys: