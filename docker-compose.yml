networks:
  securechat_network:
    name: securechatsolution_securechat_network
    driver: bridge

services:
  securechat.server:
    networks:
      - securechat_network
    image: securechat-server
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - aspnet-data-protection-keys:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: SecureChat.Server/Dockerfile
    ports:
      - "5078:8080"
    depends_on:
      - securechat.database
      - kafka

  frontend:
    image: frontend
    build:
      context: . 
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - securechat.server
    networks:
      - securechat_network

  securechat.database:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: securechatdb
    ports:
      - "5440:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - securechat_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2185:2181"
    networks:
      - securechat_network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9097
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9097:9092"
    networks:
      - securechat_network
    
volumes:
  postgres_data:
  aspnet-data-protection-keys: