@page "/register"
@using System.ComponentModel.DataAnnotations
@using SecureChat.Client.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" />
    </div>

    <div class="form-group">
        <label>Username:</label>
        <InputText @bind-Value="registerModel.Username" class="form-control" />
    </div>

    <div class="form-group">
        <label>Password:</label>
        <InputText type="password" @bind-Value="registerModel.Password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    private RegisterModel registerModel = new();
    private string message = "";

    private async Task HandleRegister()
    {
        var result = await AuthService.RegisterAsync(
            registerModel.Email,
            registerModel.Username,
            registerModel.Password);

        message = result.Message;
    
        if (result.Success)
        {
            Navigation.NavigateTo("/login");
        }
    }

    private class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        public string Username { get; set; }

        [Required]
        [MinLength(6)]
        public string Password { get; set; }
    }
}