@page "/login"
@using System.ComponentModel.DataAnnotations
@using SecureChat.Client.Services
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject TokenAuthenticationStateProvider AuthStateProvider

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label>Email:</label>
        <InputText @bind-Value="loginModel.Email" class="form-control"/>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <InputText type="password" @bind-Value="loginModel.Password" class="form-control"/>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger mt-3">@message</div>
}

@code {
    private LoginModel loginModel = new();
    private string message = "";

    private async Task HandleLogin()
    {
        var result = await AuthService.LoginAsync(
            loginModel.Email,
            loginModel.Password);

        if (result.Success)
        {
            await ((TokenAuthenticationStateProvider)AuthStateProvider)
                .SetTokenAsync(result.Token);
            Navigation.NavigateTo("/");
        }
        else
        {
            message = result.Message;
        }
    }

    private class LoginModel
    {
        [Required] [EmailAddress] public string Email { get; set; }

        [Required] public string Password { get; set; }
    }

}